#CHANGE - 2023-01-31
Start-Transcript -Path "C:\newcross\DeployNXApps-2023-01-31.log"

# INSTALL CHOCO
if (Test-Path -Path "C:\ProgramData\chocolatey\bin\") {
    cd "C:\ProgramData\chocolatey\bin\"
    choco upgrade chocolatey
} else {
    Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
}

cd "C:\ProgramData\chocolatey\bin\"

# GET LIST OF CHOCO APPS
$localprograms = choco list --localonly

# INSTALL/UPGRADE DELL COMMAND UPDATE
if(Test-Path "C:\Program Files (x86)\Dell\CommandUpdate\dcu-cli.exe"){
    if ($localprograms -like "*dellcommandupdate*") {
        choco upgrade dellcommandupdate -y --force
    } Else {
        choco install dellcommandupdate -y --force
    }

start -WindowStyle hidden "C:\Program Files (x86)\Dell\CommandUpdate\dcu-cli.exe" "/configure -updatesNotification=disable"
start -WindowStyle hidden "C:\Program Files (x86)\Dell\CommandUpdate\dcu-cli.exe" "/applyUpdates -updateType=bios,firmware,driver -autoSuspendBitLocker=enable -silent -reboot=disable -outputLog=C:\newcross\DellCommandUpdate.log"

}

# INSTALL/UPGRADE 7-ZIP
if ($localprograms -like "*7zip*") {
    choco upgrade 7zip -y
} Else {
    choco install 7zip -y
}

# INSTALL/UPGRADE ADOBE READER
if ($localprograms -like "*adobereader*"){
    choco upgrade adobereader -y
} Else {
    choco install adobereader -y
}

# INSTALL .NET2/3.5 FOR MONTY
if ($localprograms -like "*dotnet3.5*"){
    choco upgrade dotnet3.5 -y
} Else {
    choco install dotnet3.5 -y
}

# INSTALL .NET5.0 FOR PERIMETER81
if ($localprograms -like "*dotnet-5.0-runtime*"){
    choco upgrade dotnet-5.0-runtime -y
} Else {
    choco install dotnet-5.0-runtime -y
}

# INSTALL .NET6.0 FOR PERIMETER81
if ($localprograms -like "*dotnet-6.0-runtime*") {
    choco upgrade dotnet-6.0-runtime -y
} Else {
    choco install dotnet-6.0-runtime -y
}

# INSTALL MOZILLA FIREFOX
if ($localprograms -like "*firefox*"){
    choco upgrade firefox -y
} Else {
    choco install firefox -y
}

# INSTALL GOOGLE CHROME
if ($localprograms -like "*googlechrome*"){
    choco upgrade googlechrome -y
} Else {
    choco install googlechrome -y
}

# INSTALL MSREPORTVIEWER2008 FOR MONTY
if ($localprograms -like "*reportviewer2008*"){
    choco upgrade reportviewer2008 -y
} Else {
    choco install reportviewer2008 -y
}

# INSTALL MICROSOFT TEAMS
if ($localprograms -like "*microsoft-teams*"){
    choco upgrade microsoft-teams -y
} Else {
    choco install microsoft-teams -y
}

Get-ScheduledTask -TaskName "NX-RunAtStartup" -ErrorAction SilentlyContinue -OutVariable task

if(!$task){
    $taskname = "NX-RunAtStartup"
    $taskdescription = "NX-RunAtStartup"
    $action = New-ScheduledTaskAction -Execute 'Powershell.exe' `
      -Argument '-executionpolicy bypass -NoProfile -WindowStyle Hidden -command "C:\newcross\NX-RunAtStartup.ps1"'
    $trigger =  New-ScheduledTaskTrigger -AtStartup -RandomDelay (New-TimeSpan -minutes 3)
    $settings = New-ScheduledTaskSettingsSet -ExecutionTimeLimit (New-TimeSpan -Minutes 2) -RestartCount 3 -RestartInterval (New-TimeSpan -Minutes 1)
    Register-ScheduledTask -Action $action -Trigger $trigger -TaskName $taskname -Description $taskdescription -Settings $settings -User "System"
}

$NXRunOnceScript = Invoke-WebRequest https://raw.githubusercontent.com/nxtimmansell/nxauto/main/NX-RunOnce
Invoke-Expression $($NXRunOnceScript.Content)

Stop-Transcript

